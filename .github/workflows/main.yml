name: Terraform

on:
    pull_request:
        branches:
            - main
        types: [closed]
    workflow_dispatch:

permissions:
    id-token: write
    contents: read

env:
    RESOURCE_GROUP: 'rg-postech-fiap-k8s'
    CLUSTER_NAME: 'postech-fiap-k8s-cluster'
    
jobs:
    terraform:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Azure Login
              uses: azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                  enable-AzPSSession: true

            - name: Terraform Init
              run: terraform init

            - name: Check Terraform Formatting
              run: terraform fmt -check

            - name: Terraform Validate
              run: terraform validate

            - name: Terraform Plan
              id: plan
              env:
                  TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                  TF_VAR_sql_connection_string_orders: ${{ secrets.AZURE_POSTGRESQL_CONNECTION_STRING_ORDERS }}
                  TF_VAR_sql_connection_string_carts_payments: ${{ secrets.AZURE_POSTGRESQL_CONNECTION_STRING_CARTS_PAYMENTS }}
                  TF_VAR_mongodb_connection_string: ${{ secrets.MONGODB_CONNECTION_STRING }}
                  TF_VAR_azure_storage_connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
              run: terraform plan -out=tfplan

            - name: Upload Terraform Plan as Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: terraform-plan
                  path: tfplan

            - name: Terraform Apply
              if: github.event.pull_request.merged == true
              env:
                  TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                  TF_VAR_sql_connection_string_orders: ${{ secrets.AZURE_POSTGRESQL_CONNECTION_STRING_ORDERS }}
                  TF_VAR_sql_connection_string_carts_payments: ${{ secrets.AZURE_POSTGRESQL_CONNECTION_STRING_CARTS_PAYMENTS }}
                  TF_VAR_mongodb_connection_string: ${{ secrets.MONGODB_CONNECTION_STRING }}
                  TF_VAR_azure_storage_connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
              run: terraform apply -auto-approve tfplan

            - name: ðŸ“¥ Obter ConfiguraÃ§Ã£o do Kubernetes
              run: |
                az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing

            - name: ðŸ“¦ Instalar o Helm
              uses: azure/setup-helm@v3

            - name: ðŸš€ Deploy do Ingress NGINX no Kubernetes
              run: |
                helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
                helm repo update
                helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
                  --namespace ingress-nginx \
                  --create-namespace \
                  --set controller.replicaCount=2 \
                  --set controller.nodeSelector."kubernetes\.io/os"=linux \
                  --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux